/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package medialib;

import java.util.List;
import java.util.Scanner;

import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;

import io.github.palexdev.materialfx.theming.JavaFXThemes;
import io.github.palexdev.materialfx.theming.MaterialFXStylesheets;
import io.github.palexdev.materialfx.theming.UserAgentBuilder;
import io.github.palexdev.materialfx.controls.MFXButton;
import io.github.palexdev.materialfx.enums.ButtonType;

import org.checkerframework.checker.units.qual.s;

import utils.Parser;
import utils.Writer;

import utils.Models.Admin;
import utils.Models.User;
import utils.Models.Book;


public class App extends Application {
  private static List<Admin> admins;
  private static List<User> users;
  private static List<Book> books;

  public static void initialize() {
    Parser parser = new Parser();

    parser.parse();

    admins = parser.getAdmins();
    users = parser.getUsers();
    books = parser.getBooks();
  }

  public void save() {
    Writer.write(users, books);
  }

  public String getGreeting() {
    return "\n\n\nHello World!\n\n\n";
  }

  public static void printAdmins() {
    System.out.println("-----------------Admins-----------------");
    for (Admin admin : admins) {
      System.out.println(admin.getUsername());
    }
  }
  public static void printUsers() {
    System.out.println("-----------------Users------------------");
    for (User user : users) {
      System.out.println(user.getUsername());
    }
  }
  public static void printBooks() {
    System.out.println("-----------------Books------------------");
    for (Book book : books) {
      System.out.println(book.getTitle());
    }
  }
  public static void printAll() {
    printAdmins();
    printUsers();
    printBooks();
  }

  public static void randomize() {
    Writer.populate();
  }

  public static void main(String[] args) {
    System.out.println(new App().getGreeting());

    App app = new App();

    if(false) {
      app.randomize();
    }

    app.initialize();
    app.printAll();
    System.out.println("\n\nInitialization complete.\n\n\n");

    //example db usage
    // User darcie = getUserByUsername("darcie.bernhard");
    // darcie.setFirstName("Darcie");
    // darcie.setLastName("Bernhard");

    // Login prompt
    // User user;
    // while((user = app.promptLogin()) == null) {
    //   System.out.println("Please try again");
    // }
    // System.out.println("Welcome " + user.getFirstName() + " " + user.getLastName());

    app.launch(args);

    app.save();
  }

  @Override
  public void start(Stage primaryStage) throws Exception {
    // Parent root = FXMLLoader.load(getClass().getResource("Login.fxml"));
    // Group root = new Group();

    UserAgentBuilder.builder()
      .themes(JavaFXThemes.MODENA)
      .themes(MaterialFXStylesheets.forAssemble(true))
      .setDeploy(true)
      .setResolveAssets(true)
      .build()
      .setGlobal();

    MFXButton button = new MFXButton("Click me!");
    button.setOnAction(e -> System.out.println("Button clicked!"));
    button.setButtonType(ButtonType.RAISED);

    StackPane root = new StackPane();
    root.getChildren().add(button);

    primaryStage.setTitle("Medialab Library");
    primaryStage.setScene(new Scene(root));
    primaryStage.show();
  }


  public static User getUserByUsername(String username) {
    for (User user : users) {
      if (user.getUsername().equals(username)) {
        return user;
      }
    }
    return null; // User not found
  }

  public User promptLogin() {
    Scanner scanner = new Scanner(System.in);

    System.out.println("Username: ");
    String username = scanner.nextLine();
    // String username = System.console().readLine();

    System.out.println("Password: ");
    String password = scanner.nextLine();
    // String password = System.console().readLine();

    scanner.close();

    User user = getUserByUsername(username);
    if(user == null) {
      System.out.println("User not found");
      return null;
    }

    if(!user.getPassword().equals(password)) {
      System.out.println("Incorrect password");
      return null;
    }

    return user;
  }
}
